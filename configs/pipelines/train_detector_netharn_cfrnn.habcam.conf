
#  Groundtruth file extensions (txt, kw18, etc...). Note: this is indepedent of
#  the format that's stored in the file.
groundtruth_extensions = .csv

#  Algorithm to use for 'groundtruth_reader'.
#  Must be one of the following options:
#  	- habcam :: Reads habcam detection/ground truth files.
#  	- kw18 :: Detected object set reader using kw18 format.
groundtruth_reader:type = habcam

#  Can be either: "one_per_file" or "one_per_folder".
groundtruth_style = one_per_folder

#  Semicolon list of seperated image extensions to use in training, images
#  without this extension will not be included.
image_extensions = .jpg;.jpeg;.JPG;.JPEG;.tif;.tiff;.TIF;.TIFF;.png;.PNG;.sgi;.SGI;.bmp;.BMP;.pgm;.PGM

#  Semicolon list of seperated video extensions to use in training, videos
#  without this extension will not be included.
video_extensions = .mp4;.MP4;.mpg;.MPG;.mpeg;.MPEG;.avi;.AVI;.wmv;.WMV;.mov;.MOV;.webm;.WEBM;.ogg;.OGG

#  Pipeline to use to extract video frames if inputs are videos
relativepath video_extractor = filter_extract_frames.pipe

#  Percent [0.0, 1.0] of test samples to use if no manual files specified.
default_percent_test = 0.10

#  Number of test frames to group together in one test burst
test_burst_frame_count = 10

#  Augmentation pipeline.
relativepath augmentation_pipeline = train_aug_split.pipe

#  Augmentatation cache.
augmentation_cache = augmented_images

#  Always re-run augmentations on new runs.
regenerate_cache = true


#  Algorithm to use for 'detector_trainer'.
detector_trainer:type = ocv_windowed

block detector_trainer:ocv_windowed

  # Directory for all files used in training
  train_directory = deep_training

  # Windowing mode, can be disabled, maintain_ar, scale, chip, adaptive
  mode = original_and_resized

  # Resized chip width.
  chip_width = 640

  # Resized chip height.
  chip_height = 640

  # Adaptive size threshold for chipping
  chip_adaptive_thresh = 1600000

  # Don't train on chips with detections smaller than this
  min_train_box_length = 5

  # Image reader type
  image_reader:type = vxl

endblock

block detector_trainer:ocv_windowed:trainer

  # Trainer type
  type = netharn

  # Number of GPUs to use, -1 indicates all
  netharn:gpu_count = -1

  # Network perspective field size
  netharn:chip_width = 640

  # Backbone file
  relativepath netharn:backbone = models/pytorch_resnext101.pth

  #  Pipeline template file.
  relativepath netharn:pipeline_template = templates/detector_netharn.pipe

  # Max timeout in seconds
  netharn:timeout = 300000

  # Image train batch size
  netharn:batch_size = auto

  # Training learning rate
  netharn:learning_rate = auto

  # Augmentation method
  netharn:augmentation = complex

endblock
